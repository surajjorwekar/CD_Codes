                         Assignment no-03

Name:-poonam Bagate
Roll No-19 (BE-E)
Problem Statement:-write Yacc specification for arithmatic calculator.
***************************************************************
LEX FILE

%{

#include "y.tab.h"
#include <math.h>
%}

NUMBER [0-9]+|([0-9]*"."[0-9]+)

%%
{NUMBER} {yylval.p=atof(yytext);
return NUMBER;}
sqrt|SQRT {return SQRT;}
squ|SQUARE {return SQUARE;}
reci|RECI {return RECI;}
cube|CUBE {return CUBE;}
fact|FACT {return FACT;}
mod|MOD {return MOD;}

[\t]+ ;

\n|. return yytext[0];
%%

*********************************************************
YACC FILE

%{

#include "y.tab.h"
#include <math.h>
#include <stdio.h>
int i,j;
%}

%union
{
double p;
}
%token <p> NUMBER
%token SQRT SQUARE RECI MOD CUBE FACT
%left '+''-'
%right '*''/'
%right '^'

%nonassoc NEG
%type <p> Exp

%%

SL : SS '\n'
   | SL SS '\n'
   ;
SS : Exp {printf("The output is=%g\n",$1);}
   ;

Exp : Exp '+' Exp {$$=$1+$3;}
    |Exp '-' Exp {$$=$1-$3;}
    |Exp '*' Exp {$$=$1*$3;}
    |Exp '/' Exp {

if($3==0)
  printf("Error! Divide by zero!!");
else
  $$=$1/$3;
}

|Exp '^' Exp {$$=pow($1,$3);}

|SQRT '(' Exp ')' {$$=sqrt($3);}
|SQUARE '(' Exp ')' {$$=$3*$3;}

|RECI '(' Exp ')' {$$=1/($3);}

|CUBE '(' Exp ')' {$$=$3*$3*$3;}


|FACT '(' Exp ')' 
 {
  $$=1;
  for(j=1;j<=$3;j++)
  $$=$$*j;
 }

|MOD '('Exp','Exp')' {$$=fmod($3,$5);}
|NUMBER
;


%%
extern FILE*yyin;

int main()
{
do{
yyparse();
}while(!feof(yyin));
}

yyerror(char*a)
{
fprintf(stderr,"parse error!!!");
}


*********************************************************
output-

karan@karan-Lenovo-IdeaPad-Z510:~$ lex cal.l
karan@karan-Lenovo-IdeaPad-Z510:~$ yacc -d cal.y

karan@karan-Lenovo-IdeaPad-Z510:~$ cc lex.yy.c y.tab.c -ll -lm
karan@karan-Lenovo-IdeaPad-Z510:~$ ./a.out

mod(12,7)
The output is=5
12*2
The output is=24
125
The output is=125
12+5
The output is=17
25-8
The output is=17
7+8*9
The output is=79


